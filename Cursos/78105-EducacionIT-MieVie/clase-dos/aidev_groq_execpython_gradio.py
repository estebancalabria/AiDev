# -*- coding: utf-8 -*-
"""AiDev-Groq-ExecPython-Gradio.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cOc06EShRv6HwQvv2qirlnPaxb2nLF-2

Mi primer Hola Mundo en Python
"""

print("Hola, mundo")

!pip install groq

from groq import Groq

client = Groq(
    api_key="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",
)

chat_completion = client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": "Decime como contar de 1 a 10 en python",
        }
    ],
    model="llama-3.3-70b-versatile",
    stream=False,
)

print(chat_completion.choices[0].message.content)

from groq import Groq

client = Groq(
    api_key="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",
)

chat_completion = client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": "Decime como contar de 1 a 10 en python. Responder el codigo sin acotar nada mas. Solo devolver codigo python",
        }
    ],
    model="llama-3.3-70b-versatile",
    stream=False,
)

#print\(chat_completion.choices[0].message.content)

codigo = chat_completion.choices[0].message.content
codigo = codigo.replace("```python", "")
codigo = codigo.replace("```", "")
#print(codigo)

exec(codigo)

!pip install gradio

import gradio as gr
from groq import Groq

# Initialize the Groq client
client = Groq(
    api_key="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",
)

# Define the chat function to interact with the Groq API
def chat_with_llm(message, history):
    # Convert Gradio history format to Groq message format
    messages = []
    for human, assistant in history:
        messages.append({"role": "user", "content": human})
        if assistant:  # Check if assistant message exists
            messages.append({"role": "assistant", "content": assistant})

    # Add the current message from the user
    messages.append({"role": "user", "content": message})

    # Call the Groq API
    chat_completion = client.chat.completions.create(
        messages=messages,
        model="llama-3.3-70b-versatile",
        stream=False,
    )

    # Return the response
    return chat_completion.choices[0].message.content

# Create Gradio interface
demo = gr.ChatInterface(
    fn=chat_with_llm,
    title="Groq LLama 3.3 Chat Interface",
    description="Chat with LLama 3.3 70B model through Groq API",
    examples=["Decime como contar de 1 a 10 en python",
              "¿Cómo puedo crear un bucle for en Python?",
              "Explicame qué es la programación orientada a objetos"],
    theme="soft"
)

# Launch the app
demo.launch()